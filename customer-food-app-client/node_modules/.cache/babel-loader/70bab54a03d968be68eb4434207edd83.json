{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/avatar/style\";\nimport _Avatar from \"antd/es/avatar\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nimport _objectSpread from \"/home/amavi/projects/demo2/customer-food-app-client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\n\nvar _temp,\n    _jsxFileName = \"/home/amavi/projects/demo2/customer-food-app-client/src/user/profile/Profile.js\";\n\nimport React, { Component } from 'react';\nimport { checkEmailAvailability, checkUsernameAvailability, editprofile, getUserProfile } from '../../util/APIUtils';\nimport { getAvatarColor } from '../../util/Colors';\nimport LoadingIndicator from '../../common/LoadingIndicator';\nimport './Profile.css';\nimport NotFound from '../../common/NotFound';\nimport ServerError from '../../common/ServerError';\nimport { CONTACTNO_MAX_LENGTH, CONTACTNO_MIN_LENGTH, EMAIL_MAX_LENGTH, NAME_MAX_LENGTH, NAME_MIN_LENGTH, PASSWORD_MAX_LENGTH, PASSWORD_MIN_LENGTH, USERNAME_MAX_LENGTH, USERNAME_MIN_LENGTH } from \"../../constants\";\n\nconst CollectionCreateForm = _Form.create({\n  name: 'form_in_modal'\n})(( // eslint-disable-next-line\n_temp = class extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validateName = name => {\n      if (name.length < NAME_MIN_LENGTH) {\n        return {\n          validateStatus: 'error',\n          errorMsg: `Name is too short (Minimum ${NAME_MIN_LENGTH} characters needed.)`\n        };\n      } else if (name.length > NAME_MAX_LENGTH) {\n        return {\n          validationStatus: 'error',\n          errorMsg: `Name is too long (Maximum ${NAME_MAX_LENGTH} characters allowed.)`\n        };\n      } else {\n        return {\n          validateStatus: 'success',\n          errorMsg: null\n        };\n      }\n    };\n\n    this.validateLocation = location => {\n      if (location.length < LOCATION_MIN_LENGTH) {\n        return {\n          validateStatus: 'error',\n          errorMsg: `Address is too short (Minimum ${LOCATION_MIN_LENGTH} characters needed.)`\n        };\n      } else if (location.length > LOCATION_MAX_LENGTH) {\n        return {\n          validationStatus: 'error',\n          errorMsg: `Address is too long (Maximum ${LOCATION_MAX_LENGTH} characters allowed.)`\n        };\n      } else {\n        return {\n          validateStatus: 'success',\n          errorMsg: null\n        };\n      }\n    };\n\n    this.validateContact = contact => {\n      if (contact.length < CONTACT_MIN_LENGTH) {\n        return {\n          validateStatus: 'error',\n          errorMsg: `Contact is too short (Minimum ${CONTACT_MIN_LENGTH} characters needed.)`\n        };\n      } else if (contact.length > CONTACT_MAX_LENGTH) {\n        return {\n          validationStatus: 'error',\n          errorMsg: `Contact is too long (Maximum ${CONTACT_MAX_LENGTH} characters allowed.)`\n        };\n      } else {\n        return {\n          validateStatus: 'success',\n          errorMsg: null\n        };\n      }\n    };\n\n    this.validateLicense = license => {\n      if (license.length < LICENSE_MIN_LENGTH) {\n        return {\n          validateStatus: 'error',\n          errorMsg: `License is too short (Minimum ${LICENSE_MIN_LENGTH} characters needed.)`\n        };\n      } else if (license.length > LICENSE_MAX_LENGTH) {\n        return {\n          validationStatus: 'error',\n          errorMsg: `License is too long (Maximum ${LICENSE_MAX_LENGTH} characters allowed.)`\n        };\n      } else {\n        return {\n          validateStatus: 'success',\n          errorMsg: null\n        };\n      }\n    };\n\n    this.validateEmail = email => {\n      if (!email) {\n        return {\n          validateStatus: 'error',\n          errorMsg: 'Email may not be empty'\n        };\n      }\n\n      const EMAIL_REGEX = RegExp('[^@ ]+@[^@ ]+\\\\.[^@ ]+');\n\n      if (!EMAIL_REGEX.test(email)) {\n        return {\n          validateStatus: 'error',\n          errorMsg: 'Email not valid'\n        };\n      }\n\n      if (email.length > EMAIL_MAX_LENGTH) {\n        return {\n          validateStatus: 'error',\n          errorMsg: `Email is too long (Maximum ${EMAIL_MAX_LENGTH} characters allowed)`\n        };\n      }\n\n      return {\n        validateStatus: null,\n        errorMsg: null\n      };\n    };\n\n    this.validateUsername = username => {\n      if (username.length < USERNAME_MIN_LENGTH) {\n        return {\n          validateStatus: 'error',\n          errorMsg: `Username is too short (Minimum ${USERNAME_MIN_LENGTH} characters needed.)`\n        };\n      } else if (username.length > USERNAME_MAX_LENGTH) {\n        return {\n          validationStatus: 'error',\n          errorMsg: `Username is too long (Maximum ${USERNAME_MAX_LENGTH} characters allowed.)`\n        };\n      } else {\n        return {\n          validateStatus: null,\n          errorMsg: null\n        };\n      }\n    };\n\n    this.validatePassword = password => {\n      if (password.length < PASSWORD_MIN_LENGTH) {\n        return {\n          validateStatus: 'error',\n          errorMsg: `Password is too short (Minimum ${PASSWORD_MIN_LENGTH} characters needed.)`\n        };\n      } else if (password.length > PASSWORD_MAX_LENGTH) {\n        return {\n          validationStatus: 'error',\n          errorMsg: `Password is too long (Maximum ${PASSWORD_MAX_LENGTH} characters allowed.)`\n        };\n      } else {\n        return {\n          validateStatus: 'success',\n          errorMsg: null\n        };\n      }\n    };\n\n    this.state = {\n      name: {\n        value: ''\n      },\n      username: {\n        value: ''\n      },\n      email: {\n        value: ''\n      },\n      password: {\n        value: ''\n      },\n      license: {\n        value: ''\n      },\n      location: {\n        value: ''\n      },\n      contact: {\n        value: ''\n      }\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.validateUsernameAvailability = this.validateUsernameAvailability.bind(this);\n    this.validateEmailAvailability = this.validateEmailAvailability.bind(this);\n    this.isFormInvalid = this.isFormInvalid.bind(this);\n  }\n\n  handleInputChange(event, validationFun) {\n    const target = event.target;\n    const inputName = target.name;\n    const inputValue = target.value;\n    this.setState({\n      [inputName]: _objectSpread({\n        value: inputValue\n      }, validationFun(inputValue))\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const editRequest = {\n      name: this.state.name.value,\n      email: this.state.email.value,\n      username: this.state.username.value,\n      license: this.state.license.value,\n      location: this.state.location.value,\n      password: this.state.password.value,\n      contact: this.state.contact.value\n    };\n    editprofile(editRequest).then(response => {\n      _notification.success({\n        message: 'Foodie App',\n        description: \"Saved\"\n      });\n\n      this.props.history.push(\"/login\");\n    }).catch(error => {\n      _notification.error({\n        message: 'Foodie App',\n        description: error.message || 'Sorry! Something went wrong. Please try again!'\n      });\n    });\n  }\n\n  isFormInvalid() {\n    return !(this.state.name.validateStatus === 'success' && this.state.username.validateStatus === 'success' && this.state.email.validateStatus === 'success' && this.state.license.validateStatus === 'success' && this.state.location.validateStatus === 'success' && this.state.contact.validateStatus === 'success' && this.state.password.validateStatus === 'success');\n  }\n\n  render() {\n    const _this$props = this.props,\n          visible = _this$props.visible,\n          onCancel = _this$props.onCancel,\n          onCreate = _this$props.onCreate;\n    return React.createElement(_Modal, {\n      visible: visible,\n      title: \"Edit Profile\",\n      okText: \"Create\",\n      onCancel: onCancel,\n      onOk: onCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(_Form, {\n      layout: \"vertical\",\n      onSubmit: this.handleSubmit,\n      className: \"signup-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      label: \"Full Name\",\n      validateStatus: this.state.name.validateStatus,\n      help: this.state.name.errorMsg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      size: \"large\",\n      name: \"name\",\n      autoComplete: \"on\",\n      placeholder: \"Your full name\",\n      value: this.state.name.value,\n      onChange: event => this.handleInputChange(event, this.validateName),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(_Form.Item, {\n      label: \"Username\",\n      hasFeedback: true,\n      validateStatus: this.state.username.validateStatus,\n      help: this.state.username.errorMsg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      size: \"large\",\n      name: \"username\",\n      autoComplete: \"on\",\n      placeholder: \"A unique username\",\n      value: this.state.username.value,\n      onBlur: this.validateUsernameAvailability,\n      onChange: event => this.handleInputChange(event, this.validateUsername),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), React.createElement(_Form.Item, {\n      label: \"License\",\n      hasFeedback: true,\n      validateStatus: this.state.license.validateStatus,\n      help: this.state.license.errorMsg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      size: \"large\",\n      name: \"license\",\n      type: \"license\",\n      autoComplete: \"on\",\n      placeholder: \"Your license\",\n      value: this.state.license.value,\n      onBlur: this.validateLicenseAvailability,\n      onChange: event => this.handleInputChange(event, this.validateLicense),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })), React.createElement(_Form.Item, {\n      label: \"Location\",\n      hasFeedback: true,\n      validateStatus: this.state.location.validateStatus,\n      help: this.state.location.errorMsg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      size: \"large\",\n      name: \"location\",\n      type: \"location\",\n      autoComplete: \"on\",\n      placeholder: \"Your location\",\n      value: this.state.location.value,\n      onBlur: this.validateLocationAvailability,\n      onChange: event => this.handleInputChange(event, this.validateLocation),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })), React.createElement(_Form.Item, {\n      label: \"Contact\",\n      hasFeedback: true,\n      validateStatus: this.state.contact.validateStatus,\n      help: this.state.contact.errorMsg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      size: \"large\",\n      name: \"contact\",\n      type: \"contact\",\n      autoComplete: \"on\",\n      placeholder: \"Your contact\",\n      value: this.state.contact.value,\n      onBlur: this.validateContactAvailability,\n      onChange: event => this.handleInputChange(event, this.validateContact),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    })), React.createElement(_Form.Item, {\n      label: \"Password\",\n      validateStatus: this.state.password.validateStatus,\n      help: this.state.password.errorMsg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      size: \"large\",\n      name: \"password\",\n      type: \"password\",\n      autoComplete: \"on\",\n      placeholder: \"A password between 6 to 20 characters\",\n      value: this.state.password.value,\n      onChange: event => this.handleInputChange(event, this.validatePassword),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }))));\n  }\n\n  validateUsernameAvailability() {\n    // First check for client side errors in username\n    const usernameValue = this.state.username.value;\n    const usernameValidation = this.validateUsername(usernameValue);\n\n    if (usernameValidation.validateStatus === 'error') {\n      this.setState({\n        username: _objectSpread({\n          value: usernameValue\n        }, usernameValidation)\n      });\n      return;\n    }\n\n    this.setState({\n      username: {\n        value: usernameValue,\n        validateStatus: 'validating',\n        errorMsg: null\n      }\n    });\n    checkUsernameAvailability(usernameValue).then(response => {\n      if (response.available) {\n        this.setState({\n          username: {\n            value: usernameValue,\n            validateStatus: 'success',\n            errorMsg: null\n          }\n        });\n      } else {\n        this.setState({\n          username: {\n            value: usernameValue,\n            validateStatus: 'error',\n            errorMsg: 'This username is already taken'\n          }\n        });\n      }\n    }).catch(error => {\n      // Marking validateStatus as success, Form will be recchecked at server\n      this.setState({\n        username: {\n          value: usernameValue,\n          validateStatus: 'success',\n          errorMsg: null\n        }\n      });\n    });\n  }\n\n  validateEmailAvailability() {\n    // First check for client side errors in email\n    const emailValue = this.state.email.value;\n    const emailValidation = this.validateEmail(emailValue);\n\n    if (emailValidation.validateStatus === 'error') {\n      this.setState({\n        email: _objectSpread({\n          value: emailValue\n        }, emailValidation)\n      });\n      return;\n    }\n\n    this.setState({\n      email: {\n        value: emailValue,\n        validateStatus: 'validating',\n        errorMsg: null\n      }\n    });\n    checkEmailAvailability(emailValue).then(response => {\n      if (response.available) {\n        this.setState({\n          email: {\n            value: emailValue,\n            validateStatus: 'success',\n            errorMsg: null\n          }\n        });\n      } else {\n        this.setState({\n          email: {\n            value: emailValue,\n            validateStatus: 'error',\n            errorMsg: 'This Email is already registered'\n          }\n        });\n      }\n    }).catch(error => {\n      // Marking validateStatus as success, Form will be recchecked at server\n      this.setState({\n        email: {\n          value: emailValue,\n          validateStatus: 'success',\n          errorMsg: null\n        }\n      });\n    });\n  }\n\n}, _temp));\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleCreate = () => {\n      const form = this.formRef.props.form;\n      form.validateFields((err, values) => {\n        if (err) {\n          return;\n        }\n\n        console.log('Received values of form: ', values);\n        form.resetFields();\n        this.setState({\n          visible: false\n        });\n      });\n    };\n\n    this.saveFormRef = formRef => {\n      this.formRef = formRef;\n    };\n\n    this.state = {\n      user: null,\n      isLoading: false\n    };\n    this.loadUserProfile = this.loadUserProfile.bind(this);\n  }\n\n  loadUserProfile(username) {\n    this.setState({\n      isLoading: true\n    });\n    getUserProfile(username).then(response => {\n      this.setState({\n        user: response,\n        isLoading: false\n      });\n    }).catch(error => {\n      if (error.status === 404) {\n        this.setState({\n          notFound: true,\n          isLoading: false\n        });\n      } else {\n        this.setState({\n          serverError: true,\n          isLoading: false\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    const username = this.props.match.params.username;\n    this.loadUserProfile(username);\n  }\n\n  componentDidUpdate(nextProps) {\n    if (this.props.match.params.username !== nextProps.match.params.username) {\n      this.loadUserProfile(nextProps.match.params.username);\n    }\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return React.createElement(LoadingIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.notFound) {\n      return React.createElement(NotFound, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.serverError) {\n      return React.createElement(ServerError, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546\n        },\n        __self: this\n      });\n    } // const tabBarStyle = {\n    //     textAlign: 'center'\n    // };\n\n\n    return React.createElement(\"div\", {\n      className: \"profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    }, this.state.user ? React.createElement(\"div\", {\n      className: \"user-profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user-avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559\n      },\n      __self: this\n    }, React.createElement(_Avatar, {\n      className: \"user-avatar-circle\",\n      style: {\n        backgroundColor: getAvatarColor(this.state.user.name)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560\n      },\n      __self: this\n    }, this.state.user.name[0].toUpperCase())), React.createElement(\"div\", {\n      className: \"user-summary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"full-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565\n      },\n      __self: this\n    }, this.state.user.name), React.createElement(\"div\", {\n      className: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566\n      },\n      __self: this\n    }, \"@\", this.state.user.username), React.createElement(\"div\", {\n      className: \"contact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }, \"Contact : \", this.state.user.contact), React.createElement(\"div\", {\n      className: \"license\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    }, \"License :\", this.state.user.license), React.createElement(\"div\", {\n      className: \"location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    }, \"Location :\", this.state.user.location), React.createElement(\"div\", {\n      className: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    }, \"E-mail :\", this.state.user.email)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.showModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    }, \"Edit\"), React.createElement(CollectionCreateForm, {\n      wrappedComponentRef: this.saveFormRef,\n      visible: this.state.visible,\n      onCancel: this.handleCancel,\n      onCreate: this.handleCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    })))) : null);\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/home/amavi/projects/demo2/customer-food-app-client/src/user/profile/Profile.js"],"names":["React","Component","checkEmailAvailability","checkUsernameAvailability","editprofile","getUserProfile","getAvatarColor","LoadingIndicator","NotFound","ServerError","CONTACTNO_MAX_LENGTH","CONTACTNO_MIN_LENGTH","EMAIL_MAX_LENGTH","NAME_MAX_LENGTH","NAME_MIN_LENGTH","PASSWORD_MAX_LENGTH","PASSWORD_MIN_LENGTH","USERNAME_MAX_LENGTH","USERNAME_MIN_LENGTH","CollectionCreateForm","create","name","constructor","props","validateName","length","validateStatus","errorMsg","validationStatus","validateLocation","location","LOCATION_MIN_LENGTH","LOCATION_MAX_LENGTH","validateContact","contact","CONTACT_MIN_LENGTH","CONTACT_MAX_LENGTH","validateLicense","license","LICENSE_MIN_LENGTH","LICENSE_MAX_LENGTH","validateEmail","email","EMAIL_REGEX","RegExp","test","validateUsername","username","validatePassword","password","state","value","handleInputChange","bind","handleSubmit","validateUsernameAvailability","validateEmailAvailability","isFormInvalid","event","validationFun","target","inputName","inputValue","setState","preventDefault","editRequest","then","response","success","message","description","history","push","catch","error","render","visible","onCancel","onCreate","validateLicenseAvailability","validateLocationAvailability","validateContactAvailability","usernameValue","usernameValidation","available","emailValue","emailValidation","Profile","showModal","handleCancel","handleCreate","form","formRef","validateFields","err","values","console","log","resetFields","saveFormRef","user","isLoading","loadUserProfile","status","notFound","serverError","componentDidMount","match","params","componentDidUpdate","nextProps","backgroundColor","toUpperCase"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    checkEmailAvailability,\n    checkUsernameAvailability,\n    editprofile,\n    getUserProfile,\n\n} from '../../util/APIUtils';\nimport {Avatar, notification} from 'antd';\nimport {Button, Modal, Form, Input } from 'antd';\nimport { getAvatarColor } from '../../util/Colors';\nimport LoadingIndicator  from '../../common/LoadingIndicator';\nimport './Profile.css';\nimport NotFound from '../../common/NotFound';\nimport ServerError from '../../common/ServerError';\nimport {\n    CONTACTNO_MAX_LENGTH, CONTACTNO_MIN_LENGTH, EMAIL_MAX_LENGTH, NAME_MAX_LENGTH, NAME_MIN_LENGTH, PASSWORD_MAX_LENGTH, PASSWORD_MIN_LENGTH, USERNAME_MAX_LENGTH, USERNAME_MIN_LENGTH\n} from \"../../constants\";\n\n\nconst CollectionCreateForm = Form.create({ name: 'form_in_modal' })(\n    // eslint-disable-next-line\n    class extends React.Component {\n\n        constructor(props) {\n            super(props);\n            this.state = {\n                name: {\n                    value: ''\n                },\n                username: {\n                    value: ''\n                },\n                email: {\n                    value: ''\n                },\n                password: {\n                    value: ''\n                },\n                license:{\n                    value:''\n                },\n                location:{\n                    value:''\n                },\n                contact:{\n                    value:''\n                }\n            }\n            this.handleInputChange = this.handleInputChange.bind(this);\n            this.handleSubmit = this.handleSubmit.bind(this);\n            this.validateUsernameAvailability = this.validateUsernameAvailability.bind(this);\n            this.validateEmailAvailability = this.validateEmailAvailability.bind(this);\n            this.isFormInvalid = this.isFormInvalid.bind(this);\n        }\n        handleInputChange(event, validationFun) {\n            const target = event.target;\n            const inputName = target.name;\n            const inputValue = target.value;\n\n            this.setState({\n                [inputName] : {\n                    value: inputValue,\n                    ...validationFun(inputValue)\n                }\n            });\n        }\n        handleSubmit(event) {\n            event.preventDefault();\n\n            const editRequest = {\n                name: this.state.name.value,\n                email: this.state.email.value,\n                username: this.state.username.value,\n                license:this.state.license.value,\n                location:this.state.location.value,\n                password: this.state.password.value,\n                contact:this.state.contact.value\n            };\n\n            editprofile(editRequest)\n                .then(response => {\n                    notification.success({\n                        message: 'Foodie App',\n                        description: \"Saved\",\n                    });\n                    this.props.history.push(\"/login\");\n                }).catch(error => {\n                notification.error({\n                    message: 'Foodie App',\n                    description: error.message || 'Sorry! Something went wrong. Please try again!'\n                });\n            });\n        }\n\n        isFormInvalid() {\n            return !(this.state.name.validateStatus === 'success' &&\n                this.state.username.validateStatus === 'success' &&\n                this.state.email.validateStatus === 'success' &&\n                this.state.license.validateStatus === 'success'&&\n                this.state.location.validateStatus === 'success'&&\n                this.state.contact.validateStatus === 'success'&&\n                this.state.password.validateStatus === 'success'\n            );\n        }\n\n        render() {\n            const { visible, onCancel, onCreate } = this.props;\n            return (\n                <Modal\n            visible={visible}\n            title=\"Edit Profile\"\n            okText=\"Create\"\n            onCancel={onCancel}\n            onOk={onCreate}\n                >\n                <Form layout=\"vertical\" onSubmit={this.handleSubmit} className=\"signup-form\">\n                <Form.Item\n            label=\"Full Name\"\n            validateStatus={this.state.name.validateStatus}\n            help={this.state.name.errorMsg}>\n        <Input\n            size=\"large\"\n            name=\"name\"\n            autoComplete=\"on\"\n            placeholder=\"Your full name\"\n            value={this.state.name.value}\n            onChange={(event) => this.handleInputChange(event, this.validateName)} />\n            </Form.Item>\n            <Form.Item label=\"Username\"\n            hasFeedback\n            validateStatus={this.state.username.validateStatus}\n            help={this.state.username.errorMsg}>\n        <Input\n            size=\"large\"\n            name=\"username\"\n            autoComplete=\"on\"\n            placeholder=\"A unique username\"\n            value={this.state.username.value}\n            onBlur={this.validateUsernameAvailability}\n            onChange={(event) => this.handleInputChange(event, this.validateUsername)} />\n            </Form.Item>\n            <Form.Item\n            label=\"License\"\n            hasFeedback\n            validateStatus={this.state.license.validateStatus}\n            help={this.state.license.errorMsg}>\n        <Input\n            size=\"large\"\n            name=\"license\"\n            type=\"license\"\n            autoComplete=\"on\"\n            placeholder=\"Your license\"\n            value={this.state.license.value}\n            onBlur={this.validateLicenseAvailability}\n            onChange={(event) => this.handleInputChange(event, this.validateLicense)} />\n            </Form.Item>\n            <Form.Item\n            label=\"Location\"\n            hasFeedback\n            validateStatus={this.state.location.validateStatus}\n            help={this.state.location.errorMsg}>\n        <Input\n            size=\"large\"\n            name=\"location\"\n            type=\"location\"\n            autoComplete=\"on\"\n            placeholder=\"Your location\"\n            value={this.state.location.value}\n            onBlur={this.validateLocationAvailability}\n            onChange={(event) => this.handleInputChange(event, this.validateLocation)} />\n            </Form.Item>\n            <Form.Item\n            label=\"Contact\"\n            hasFeedback\n            validateStatus={this.state.contact.validateStatus}\n            help={this.state.contact.errorMsg}>\n        <Input\n            size=\"large\"\n            name=\"contact\"\n            type=\"contact\"\n            autoComplete=\"on\"\n            placeholder=\"Your contact\"\n            value={this.state.contact.value}\n            onBlur={this.validateContactAvailability}\n            onChange={(event) => this.handleInputChange(event, this.validateContact)} />\n            </Form.Item>\n            <Form.Item\n            label=\"Password\"\n            validateStatus={this.state.password.validateStatus}\n            help={this.state.password.errorMsg}>\n        <Input\n            size=\"large\"\n            name=\"password\"\n            type=\"password\"\n            autoComplete=\"on\"\n            placeholder=\"A password between 6 to 20 characters\"\n            value={this.state.password.value}\n            onChange={(event) => this.handleInputChange(event, this.validatePassword)} />\n            </Form.Item>\n            </Form>\n            </Modal>\n        );\n        }\n\n        validateName = (name) => {\n            if(name.length < NAME_MIN_LENGTH) {\n                return {\n                    validateStatus: 'error',\n                    errorMsg: `Name is too short (Minimum ${NAME_MIN_LENGTH} characters needed.)`\n                }\n            } else if (name.length > NAME_MAX_LENGTH) {\n                return {\n                    validationStatus: 'error',\n                    errorMsg: `Name is too long (Maximum ${NAME_MAX_LENGTH} characters allowed.)`\n                }\n            } else {\n                return {\n                    validateStatus: 'success',\n                    errorMsg: null,\n                };\n            }\n        }\n\n        validateLocation = (location) => {\n            if(location.length < LOCATION_MIN_LENGTH) {\n                return {\n                    validateStatus: 'error',\n                    errorMsg: `Address is too short (Minimum ${LOCATION_MIN_LENGTH} characters needed.)`\n                }\n            } else if (location.length > LOCATION_MAX_LENGTH) {\n                return {\n                    validationStatus: 'error',\n                    errorMsg: `Address is too long (Maximum ${LOCATION_MAX_LENGTH} characters allowed.)`\n                }\n            } else {\n                return {\n                    validateStatus: 'success',\n                    errorMsg: null,\n                };\n            }\n        }\n\n\n\n        validateContact = (contact) => {\n            if(contact.length < CONTACT_MIN_LENGTH) {\n                return {\n                    validateStatus: 'error',\n                    errorMsg: `Contact is too short (Minimum ${CONTACT_MIN_LENGTH} characters needed.)`\n                }\n            } else if (contact.length > CONTACT_MAX_LENGTH) {\n                return {\n                    validationStatus: 'error',\n                    errorMsg: `Contact is too long (Maximum ${CONTACT_MAX_LENGTH} characters allowed.)`\n                }\n            } else {\n                return {\n                    validateStatus: 'success',\n                    errorMsg: null,\n                };\n            }\n        }\n\n\n        validateLicense = (license) => {\n            if(license.length < LICENSE_MIN_LENGTH) {\n                return {\n                    validateStatus: 'error',\n                    errorMsg: `License is too short (Minimum ${LICENSE_MIN_LENGTH} characters needed.)`\n                }\n            } else if (license.length > LICENSE_MAX_LENGTH) {\n                return {\n                    validationStatus: 'error',\n                    errorMsg: `License is too long (Maximum ${LICENSE_MAX_LENGTH} characters allowed.)`\n                }\n            } else {\n                return {\n                    validateStatus: 'success',\n                    errorMsg: null,\n                };\n            }\n        }\n        validateEmail = (email) => {\n            if(!email) {\n                return {\n                    validateStatus: 'error',\n                    errorMsg: 'Email may not be empty'\n                }\n            }\n\n            const EMAIL_REGEX = RegExp('[^@ ]+@[^@ ]+\\\\.[^@ ]+');\n            if(!EMAIL_REGEX.test(email)) {\n                return {\n                    validateStatus: 'error',\n                    errorMsg: 'Email not valid'\n                }\n            }\n\n            if(email.length > EMAIL_MAX_LENGTH) {\n                return {\n                    validateStatus: 'error',\n                    errorMsg: `Email is too long (Maximum ${EMAIL_MAX_LENGTH} characters allowed)`\n                }\n            }\n\n            return {\n                validateStatus: null,\n                errorMsg: null\n            }\n        }\n\n        validateUsername = (username) => {\n            if(username.length < USERNAME_MIN_LENGTH) {\n                return {\n                    validateStatus: 'error',\n                    errorMsg: `Username is too short (Minimum ${USERNAME_MIN_LENGTH} characters needed.)`\n                }\n            } else if (username.length > USERNAME_MAX_LENGTH) {\n                return {\n                    validationStatus: 'error',\n                    errorMsg: `Username is too long (Maximum ${USERNAME_MAX_LENGTH} characters allowed.)`\n                }\n            } else {\n                return {\n                    validateStatus: null,\n                    errorMsg: null\n                }\n            }\n        }\n\n        validateUsernameAvailability() {\n            // First check for client side errors in username\n            const usernameValue = this.state.username.value;\n            const usernameValidation = this.validateUsername(usernameValue);\n\n            if(usernameValidation.validateStatus === 'error') {\n                this.setState({\n                    username: {\n                        value: usernameValue,\n                        ...usernameValidation\n                    }\n                });\n                return;\n            }\n\n            this.setState({\n                username: {\n                    value: usernameValue,\n                    validateStatus: 'validating',\n                    errorMsg: null\n                }\n            });\n\n            checkUsernameAvailability(usernameValue)\n                .then(response => {\n                    if(response.available) {\n                        this.setState({\n                            username: {\n                                value: usernameValue,\n                                validateStatus: 'success',\n                                errorMsg: null\n                            }\n                        });\n                    } else {\n                        this.setState({\n                            username: {\n                                value: usernameValue,\n                                validateStatus: 'error',\n                                errorMsg: 'This username is already taken'\n                            }\n                        });\n                    }\n                }).catch(error => {\n                // Marking validateStatus as success, Form will be recchecked at server\n                this.setState({\n                    username: {\n                        value: usernameValue,\n                        validateStatus: 'success',\n                        errorMsg: null\n                    }\n                });\n            });\n        }\n\n        validateEmailAvailability() {\n            // First check for client side errors in email\n            const emailValue = this.state.email.value;\n            const emailValidation = this.validateEmail(emailValue);\n\n            if(emailValidation.validateStatus === 'error') {\n                this.setState({\n                    email: {\n                        value: emailValue,\n                        ...emailValidation\n                    }\n                });\n                return;\n            }\n\n            this.setState({\n                email: {\n                    value: emailValue,\n                    validateStatus: 'validating',\n                    errorMsg: null\n                }\n            });\n\n            checkEmailAvailability(emailValue)\n                .then(response => {\n                    if(response.available) {\n                        this.setState({\n                            email: {\n                                value: emailValue,\n                                validateStatus: 'success',\n                                errorMsg: null\n                            }\n                        });\n                    } else {\n                        this.setState({\n                            email: {\n                                value: emailValue,\n                                validateStatus: 'error',\n                                errorMsg: 'This Email is already registered'\n                            }\n                        });\n                    }\n                }).catch(error => {\n                // Marking validateStatus as success, Form will be recchecked at server\n                this.setState({\n                    email: {\n                        value: emailValue,\n                        validateStatus: 'success',\n                        errorMsg: null\n                    }\n                });\n            });\n        }\n\n        validatePassword = (password) => {\n            if(password.length < PASSWORD_MIN_LENGTH) {\n                return {\n                    validateStatus: 'error',\n                    errorMsg: `Password is too short (Minimum ${PASSWORD_MIN_LENGTH} characters needed.)`\n                }\n            } else if (password.length > PASSWORD_MAX_LENGTH) {\n                return {\n                    validationStatus: 'error',\n                    errorMsg: `Password is too long (Maximum ${PASSWORD_MAX_LENGTH} characters allowed.)`\n                }\n            } else {\n                return {\n                    validateStatus: 'success',\n                    errorMsg: null,\n                };\n            }\n        }\n\n\n\n    },\n);\n\n\nclass Profile extends Component {\n    state = {\n        visible: false,\n    };\n    showModal = () => {\n        this.setState({ visible: true });\n    };\n    handleCancel = () => {\n        this.setState({ visible: false });\n    };\n    handleCreate = () => {\n        const { form } = this.formRef.props;\n        form.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n            console.log('Received values of form: ', values);\n            form.resetFields();\n            this.setState({ visible: false });\n        });\n    };\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: null,\n            isLoading: false\n        }\n        this.loadUserProfile = this.loadUserProfile.bind(this);\n    }\n\n    loadUserProfile(username) {\n        this.setState({\n            isLoading: true\n        });\n\n        getUserProfile(username)\n            .then(response => {\n                this.setState({\n                    user: response,\n                    isLoading: false\n                });\n            }).catch(error => {\n            if(error.status === 404) {\n                this.setState({\n                    notFound: true,\n                    isLoading: false\n                });\n            } else {\n                this.setState({\n                    serverError: true,\n                    isLoading: false\n                });\n            }\n        });\n    }\n\n    componentDidMount() {\n        const username = this.props.match.params.username;\n        this.loadUserProfile(username);\n    }\n\n    componentDidUpdate(nextProps) {\n        if(this.props.match.params.username !== nextProps.match.params.username) {\n            this.loadUserProfile(nextProps.match.params.username);\n        }\n    }\n\n    render() {\n        if(this.state.isLoading) {\n            return <LoadingIndicator />;\n        }\n\n        if(this.state.notFound) {\n            return <NotFound />;\n        }\n\n        if(this.state.serverError) {\n            return <ServerError />;\n        }\n\n        // const tabBarStyle = {\n        //     textAlign: 'center'\n        // };\n\n        return (\n            <div className=\"profile\">\n        {\n            this.state.user ? (\n            <div className=\"user-profile\">\n            <div className=\"user-details\">\n            <div className=\"user-avatar\">\n            <Avatar className=\"user-avatar-circle\" style={{ backgroundColor: getAvatarColor(this.state.user.name)}}>\n        {this.state.user.name[0].toUpperCase()}\n    </Avatar>\n        </div>\n        <div className=\"user-summary\">\n            <div className=\"full-name\">{this.state.user.name}</div>\n        <div className=\"username\">@{this.state.user.username}</div>\n        <div className=\"contact\">Contact : {this.state.user.contact}</div>\n        <div className=\"license\">License :{this.state.user.license}</div>\n        <div className=\"location\">Location :{this.state.user.location}</div>\n        <div className=\"email\">E-mail :{this.state.user.email}</div>\n        </div>\n\n        <div>\n        <Button type=\"primary\" onClick={this.showModal}>\n        Edit\n        </Button>\n        <CollectionCreateForm\n        wrappedComponentRef={this.saveFormRef}\n        visible={this.state.visible}\n        onCancel={this.handleCancel}\n        onCreate={this.handleCreate}\n        />\n\n        </div>\n        </div>\n        </div>\n    ): null\n    }\n    </div>\n    );\n    }\n}\n\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}