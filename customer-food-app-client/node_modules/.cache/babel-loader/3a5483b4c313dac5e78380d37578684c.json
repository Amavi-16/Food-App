{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/avatar/style\";\nimport _Avatar from \"antd/es/avatar\";\nvar _jsxFileName = \"/home/amavi/projects/demo2/customer-food-app-client/src/user/profile/Profile.js\";\nimport React, { Component } from 'react'; // import PollList from '../../poll/PollList';\n\nimport { getUserProfile } from '../../util/APIUtils';\nimport { getAvatarColor } from '../../util/Colors'; // import { formatDate } from '../../util/Helpers';\n\nimport LoadingIndicator from '../../common/LoadingIndicator';\nimport './Profile.css';\nimport NotFound from '../../common/NotFound';\nimport ServerError from '../../common/ServerError';\nimport { Link } from \"react-router-dom\"; // const TabPane = Tabs.TabPane;\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      isLoading: false\n    };\n    this.loadUserProfile = this.loadUserProfile.bind(this);\n  }\n\n  loadUserProfile(username) {\n    this.setState({\n      isLoading: true\n    });\n    getUserProfile(username).then(response => {\n      this.setState({\n        user: response,\n        isLoading: false\n      });\n    }).catch(error => {\n      if (error.status === 404) {\n        this.setState({\n          notFound: true,\n          isLoading: false\n        });\n      } else {\n        this.setState({\n          serverError: true,\n          isLoading: false\n        });\n      }\n    });\n\n    showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    handleCancel = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    handleCreate = () => {\n      const form = this.formRef.props.form;\n      form.validateFields((err, values) => {\n        if (err) {\n          return;\n        }\n\n        console.log('Received values of form: ', values);\n        form.resetFields();\n        this.setState({\n          visible: false\n        });\n      });\n    };\n\n    saveFormRef = formRef => {\n      this.formRef = formRef;\n    };\n  }\n\n  componentDidMount() {\n    const username = this.props.match.params.username;\n    this.loadUserProfile(username);\n  }\n\n  componentDidUpdate(nextProps) {\n    if (this.props.match.params.username !== nextProps.match.params.username) {\n      this.loadUserProfile(nextProps.match.params.username);\n    }\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return React.createElement(LoadingIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.notFound) {\n      return React.createElement(NotFound, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.serverError) {\n      return React.createElement(ServerError, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      });\n    } // const tabBarStyle = {\n    //     textAlign: 'center'\n    // };\n\n\n    return React.createElement(\"div\", {\n      className: \"profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.state.user ? React.createElement(\"div\", {\n      className: \"user-profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user-avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(_Avatar, {\n      className: \"user-avatar-circle\",\n      style: {\n        backgroundColor: getAvatarColor(this.state.user.name)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.state.user.name[0].toUpperCase())), React.createElement(\"div\", {\n      className: \"user-summary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"full-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.state.user.name), React.createElement(\"div\", {\n      className: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"@\", this.state.user.username), React.createElement(\"div\", {\n      className: \"contactno\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Contact No : \", this.state.user.contactno), React.createElement(\"div\", {\n      className: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Email :\", this.state.user.emailaddress)), React.createElement(Link, {\n      to: \"/EditProfile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Edit\"), React.createElement(_Modal, {\n      visible: visible,\n      title: \"Create a new collection\",\n      okText: \"Create\",\n      onCancel: onCancel,\n      onOk: onCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Form, {\n      layout: \"vertical\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, getFieldDecorator('title', {\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, getFieldDecorator('description')(React.createElement(Input, {\n      type: \"textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      className: \"collection-create-form_last-form-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, getFieldDecorator('modifier', {\n      initialValue: 'public'\n    })(React.createElement(Radio.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Radio, {\n      value: \"public\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Public\"), React.createElement(Radio, {\n      value: \"private\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Private\")))))))) : null);\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/home/amavi/projects/demo2/customer-food-app-client/src/user/profile/Profile.js"],"names":["React","Component","getUserProfile","getAvatarColor","LoadingIndicator","NotFound","ServerError","Link","Profile","constructor","props","state","user","isLoading","loadUserProfile","bind","username","setState","then","response","catch","error","status","notFound","serverError","showModal","visible","handleCancel","handleCreate","form","formRef","validateFields","err","values","console","log","resetFields","saveFormRef","componentDidMount","match","params","componentDidUpdate","nextProps","render","backgroundColor","name","toUpperCase","contactno","emailaddress","onCancel","onCreate","getFieldDecorator","rules","required","message","initialValue"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import PollList from '../../poll/PollList';\nimport { getUserProfile } from '../../util/APIUtils';\nimport { Avatar , Modal } from 'antd';\nimport { getAvatarColor } from '../../util/Colors';\n// import { formatDate } from '../../util/Helpers';\nimport LoadingIndicator  from '../../common/LoadingIndicator';\nimport './Profile.css';\nimport NotFound from '../../common/NotFound';\nimport ServerError from '../../common/ServerError';\nimport {Link} from \"react-router-dom\";\n// const TabPane = Tabs.TabPane;\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: null,\n            isLoading: false\n        }\n        this.loadUserProfile = this.loadUserProfile.bind(this);\n    }\n    loadUserProfile(username) {\n        this.setState({\n            isLoading: true\n        });\n        getUserProfile(username)\n            .then(response => {\n                this.setState({\n                    user: response,\n                    isLoading: false\n                });\n            }).catch(error => {\n            if(error.status === 404) {\n                this.setState({\n                    notFound: true,\n                    isLoading: false\n                });\n            } else {\n                this.setState({\n                    serverError: true,\n                    isLoading: false\n                });\n            }\n        });\n\n        showModal = () => {\n            this.setState({ visible: true });\n        };\n\n        handleCancel = () => {\n            this.setState({ visible: false });\n        };\n\n        handleCreate = () => {\n            const { form } = this.formRef.props;\n            form.validateFields((err, values) => {\n                if (err) {\n                    return;\n                }\n\n                console.log('Received values of form: ', values);\n                form.resetFields();\n                this.setState({ visible: false });\n            });\n        };\n\n        saveFormRef = formRef => {\n            this.formRef = formRef;\n        };\n\n\n    }\n\n    componentDidMount() {\n        const username = this.props.match.params.username;\n        this.loadUserProfile(username);\n    }\n    componentDidUpdate(nextProps) {\n        if(this.props.match.params.username !== nextProps.match.params.username) {\n            this.loadUserProfile(nextProps.match.params.username);\n        }\n    }\n    render() {\n        if(this.state.isLoading) {\n            return <LoadingIndicator />;\n        }\n        if(this.state.notFound) {\n            return <NotFound />;\n        }\n        if(this.state.serverError) {\n            return <ServerError />;\n        }\n        // const tabBarStyle = {\n        //     textAlign: 'center'\n        // };\n        return (\n            <div className=\"profile\">\n        {\n            this.state.user ? (\n            <div className=\"user-profile\">\n            <div className=\"user-details\">\n            <div className=\"user-avatar\">\n            <Avatar className=\"user-avatar-circle\" style={{ backgroundColor: getAvatarColor(this.state.user.name)}}>\n        {this.state.user.name[0].toUpperCase()}\n    </Avatar>\n        </div>\n        <div className=\"user-summary\">\n            <div className=\"full-name\">{this.state.user.name}</div>\n        <div className=\"username\">@{this.state.user.username}</div>\n        <div className=\"contactno\">Contact No : {this.state.user.contactno}</div>\n        <div className=\"email\">Email :{this.state.user.emailaddress}</div>\n        </div>\n         <Link to=\"/EditProfile\">Edit</Link>\n\n            <Modal\n        visible={visible}\n        title=\"Create a new collection\"\n        okText=\"Create\"\n        onCancel={onCancel}\n        onOk={onCreate}\n            >\n            <Form layout=\"vertical\">\n            <Form.Item label=\"Title\">\n            {getFieldDecorator('title', {\n            rules: [{ required: true, message: 'Please input the title of collection!' }],\n        })(<Input />)}\n    </Form.Item>\n        <Form.Item label=\"Description\">\n            {getFieldDecorator('description')(<Input type=\"textarea\" />)}\n    </Form.Item>\n        <Form.Item className=\"collection-create-form_last-form-item\">\n            {getFieldDecorator('modifier', {\n            initialValue: 'public',\n        })(\n        <Radio.Group>\n        <Radio value=\"public\">Public</Radio>\n            <Radio value=\"private\">Private</Radio>\n            </Radio.Group>,\n    )}\n    </Form.Item>\n        </Form>\n        </Modal>\n\n            </div>\n            </div>\n    ): null\n    }\n    </div>\n    );\n    }\n}\nexport default Profile;"]},"metadata":{},"sourceType":"module"}