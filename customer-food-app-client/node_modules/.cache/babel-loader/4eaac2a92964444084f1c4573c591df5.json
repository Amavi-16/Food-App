{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/avatar/style\";\nimport _Avatar from \"antd/es/avatar\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/radio/style\";\nimport _Radio from \"antd/es/radio\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/home/amavi/projects/demo2/customer-food-app-client/src/user/profile/Profile.js\";\nimport React, { Component } from 'react'; // import PollList from '../../poll/PollList';\n\nimport { getUserProfile } from '../../util/APIUtils';\nimport { getAvatarColor } from '../../util/Colors'; // import { formatDate } from '../../util/Helpers';\n\nimport LoadingIndicator from '../../common/LoadingIndicator';\nimport './Profile.css';\nimport NotFound from '../../common/NotFound';\nimport ServerError from '../../common/ServerError';\nimport { Link } from \"react-router-dom\"; // import EditProfile from '../EditProfile/EditProfile';\n\nimport Route from \"react-router-dom/es/Route\";\n\nconst CollectionCreateForm = _Form.create({\n  name: 'form_in_modal'\n})( // eslint-disable-next-line\nclass extends React.Component {\n  render() {\n    const _this$props = this.props,\n          visible = _this$props.visible,\n          onCancel = _this$props.onCancel,\n          onCreate = _this$props.onCreate,\n          form = _this$props.form;\n    const getFieldDecorator = form.getFieldDecorator;\n    return React.createElement(_Modal, {\n      visible: visible,\n      title: \"Create a new collection\",\n      okText: \"Create\",\n      onCancel: onCancel,\n      onOk: onCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(_Form, {\n      layout: \"vertical\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      label: \"Full Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, getFieldDecorator('Full name', {\n      rules: [{\n        required: true,\n        message: 'Your Full Name Required'\n      }]\n    })(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: \"User Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, getFieldDecorator('user name', {\n      rules: [{\n        required: true,\n        message: 'User Name Required'\n      }]\n    })(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: \"Contact No\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, getFieldDecorator('contact no', {\n      rules: [{\n        required: true,\n        message: 'Contact number Required'\n      }]\n    })(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(_Form.Item, {\n      label: \"Email Address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, getFieldDecorator('email address', {\n      rules: [{\n        required: true,\n        message: 'Email Address is  Required'\n      }]\n    })(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })))), React.createElement(_Form.Item, {\n      label: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, getFieldDecorator('email')(React.createElement(_Input, {\n      type: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, getFieldDecorator('password')(React.createElement(_Input, {\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      className: \"collection-create-form_last-form-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, getFieldDecorator('modifier', {\n      initialValue: 'public'\n    })(React.createElement(_Radio.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(_Radio, {\n      value: \"public\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Public\"), React.createElement(_Radio, {\n      value: \"private\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Private\"))))));\n  }\n\n}); // const TabPane = Tabs.TabPane;\n\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleCreate = () => {\n      const form = this.formRef.props.form;\n      form.validateFields((err, values) => {\n        if (err) {\n          return;\n        }\n\n        console.log('Received values of form: ', values);\n        form.resetFields();\n        this.setState({\n          visible: false\n        });\n      });\n    };\n\n    this.saveFormRef = formRef => {\n      this.formRef = formRef;\n    };\n\n    this.state = {\n      user: null,\n      isLoading: false\n    };\n    this.loadUserProfile = this.loadUserProfile.bind(this);\n  }\n\n  loadUserProfile(username) {\n    this.setState({\n      isLoading: true\n    });\n    getUserProfile(username).then(response => {\n      this.setState({\n        user: response,\n        isLoading: false\n      });\n    }).catch(error => {\n      if (error.status === 404) {\n        this.setState({\n          notFound: true,\n          isLoading: false\n        });\n      } else {\n        this.setState({\n          serverError: true,\n          isLoading: false\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    const username = this.props.match.params.username;\n    this.loadUserProfile(username);\n  }\n\n  componentDidUpdate(nextProps) {\n    if (this.props.match.params.username !== nextProps.match.params.username) {\n      this.loadUserProfile(nextProps.match.params.username);\n    }\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return React.createElement(LoadingIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.notFound) {\n      return React.createElement(NotFound, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.serverError) {\n      return React.createElement(ServerError, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      });\n    } // const tabBarStyle = {\n    //     textAlign: 'center'\n    // };\n\n\n    return React.createElement(\"div\", {\n      className: \"profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, this.state.user ? React.createElement(\"div\", {\n      className: \"user-profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user-avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(_Avatar, {\n      className: \"user-avatar-circle\",\n      style: {\n        backgroundColor: getAvatarColor(this.state.user.name)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, this.state.user.name[0].toUpperCase())), React.createElement(\"div\", {\n      className: \"user-summary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"full-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, this.state.user.name), React.createElement(\"div\", {\n      className: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"@\", this.state.user.username), React.createElement(\"div\", {\n      className: \"contactno\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Contact No : \", this.state.user.contactno), React.createElement(\"div\", {\n      className: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Contact No : \", this.state.user.email)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.showModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Edit Profile\"), React.createElement(CollectionCreateForm, {\n      wrappedComponentRef: this.saveFormRef,\n      visible: this.state.visible,\n      onCancel: this.handleCancel,\n      onCreate: this.handleCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })))) : null);\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/home/amavi/projects/demo2/customer-food-app-client/src/user/profile/Profile.js"],"names":["React","Component","getUserProfile","getAvatarColor","LoadingIndicator","NotFound","ServerError","Link","Route","CollectionCreateForm","create","name","render","props","visible","onCancel","onCreate","form","getFieldDecorator","rules","required","message","initialValue","Profile","constructor","state","showModal","setState","handleCancel","handleCreate","formRef","validateFields","err","values","console","log","resetFields","saveFormRef","user","isLoading","loadUserProfile","bind","username","then","response","catch","error","status","notFound","serverError","componentDidMount","match","params","componentDidUpdate","nextProps","backgroundColor","toUpperCase","contactno","email"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import PollList from '../../poll/PollList';\nimport { getUserProfile } from '../../util/APIUtils';\nimport { Avatar } from 'antd';\nimport { Button, Modal, Form, Input, Radio } from 'antd';\nimport { getAvatarColor } from '../../util/Colors';\n// import { formatDate } from '../../util/Helpers';\nimport LoadingIndicator  from '../../common/LoadingIndicator';\nimport './Profile.css';\nimport NotFound from '../../common/NotFound';\nimport ServerError from '../../common/ServerError';\nimport {Link} from \"react-router-dom\";\n // import EditProfile from '../EditProfile/EditProfile';\nimport Route from \"react-router-dom/es/Route\";\n\nconst CollectionCreateForm = Form.create({ name: 'form_in_modal' })(\n    // eslint-disable-next-line\n    class extends React.Component {\n        render() {\n            const { visible, onCancel, onCreate, form } = this.props;\n            const { getFieldDecorator } = form;\n            return (\n                <Modal\n            visible={visible}\n            title=\"Create a new collection\"\n            okText=\"Create\"\n            onCancel={onCancel}\n            onOk={onCreate}\n                >\n                <Form layout=\"vertical\">\n                <Form.Item label=\"Full Name\">\n                {getFieldDecorator('Full name', {\n                rules: [{ required: true, message: 'Your Full Name Required' }],\n            })(<Input />)}\n        </Form.Item>\n\n                <Form.Item label=\"User Name\">\n                {getFieldDecorator('user name', {\n                rules: [{ required: true, message: 'User Name Required' }],\n            })(<Input />)}\n        </Form.Item>\n            <Form.Item label=\"Contact No\">\n                {getFieldDecorator('contact no', {\n                rules: [{ required: true, message: 'Contact number Required' }],\n            })(<Input />)}\n            <Form.Item label=\"Email Address\">\n                {getFieldDecorator('email address', {\n                rules: [{ required: true, message: 'Email Address is  Required' }],\n            })(<Input />)}\n        </Form.Item>\n            </Form.Item>\n            <Form.Item label=\"Email\">\n                {getFieldDecorator('email')(<Input type=\"email\" />)}\n        </Form.Item>\n            <Form.Item label=\"Password\">\n                {getFieldDecorator('password')(<Input type=\"password\" />)}\n        </Form.Item>\n\n            <Form.Item className=\"collection-create-form_last-form-item\">\n                {getFieldDecorator('modifier', {\n                initialValue: 'public',\n            })(\n            <Radio.Group>\n            <Radio value=\"public\">Public</Radio>\n                <Radio value=\"private\">Private</Radio>\n                </Radio.Group>,\n        )}\n        </Form.Item>\n            </Form>\n            </Modal>\n        );\n        }\n    },\n);\n\n// const TabPane = Tabs.TabPane;\nclass Profile extends Component {\n    state = {\n        visible: false,\n    };\n    showModal = () => {\n        this.setState({ visible: true });\n    };\n    handleCancel = () => {\n        this.setState({ visible: false });\n    };\n    handleCreate = () => {\n        const { form } = this.formRef.props;\n        form.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n            console.log('Received values of form: ', values);\n            form.resetFields();\n            this.setState({ visible: false });\n        });\n    };\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: null,\n            isLoading: false\n        }\n        this.loadUserProfile = this.loadUserProfile.bind(this);\n    }\n    loadUserProfile(username) {\n        this.setState({\n            isLoading: true\n        });\n        getUserProfile(username)\n            .then(response => {\n                this.setState({\n                    user: response,\n                    isLoading: false\n                });\n            }).catch(error => {\n            if(error.status === 404) {\n                this.setState({\n                    notFound: true,\n                    isLoading: false\n                });\n            } else {\n                this.setState({\n                    serverError: true,\n                    isLoading: false\n                });\n            }\n        });\n    }\n    componentDidMount() {\n        const username = this.props.match.params.username;\n        this.loadUserProfile(username);\n    }\n    componentDidUpdate(nextProps) {\n        if(this.props.match.params.username !== nextProps.match.params.username) {\n            this.loadUserProfile(nextProps.match.params.username);\n        }\n    }\n    render() {\n        if(this.state.isLoading) {\n            return <LoadingIndicator />;\n        }\n        if(this.state.notFound) {\n            return <NotFound />;\n        }\n        if(this.state.serverError) {\n            return <ServerError />;\n        }\n        // const tabBarStyle = {\n        //     textAlign: 'center'\n        // };\n        return (\n            <div className=\"profile\">\n        {\n            this.state.user ? (\n            <div className=\"user-profile\">\n            <div className=\"user-details\">\n            <div className=\"user-avatar\">\n            <Avatar className=\"user-avatar-circle\" style={{ backgroundColor: getAvatarColor(this.state.user.name)}}>\n        {this.state.user.name[0].toUpperCase()}\n    </Avatar>\n        </div>\n        <div className=\"user-summary\">\n            <div className=\"full-name\">{this.state.user.name}</div>\n        <div className=\"username\">@{this.state.user.username}</div>\n        <div className=\"contactno\">Contact No : {this.state.user.contactno}</div>\n        <div className=\"email\">Contact No : {this.state.user.email}</div>\n        </div>\n\n        <div>\n        <Button type=\"primary\" onClick={this.showModal}>\n        Edit Profile\n        </Button>\n        <CollectionCreateForm\n        wrappedComponentRef={this.saveFormRef}\n        visible={this.state.visible}\n        onCancel={this.handleCancel}\n        onCreate={this.handleCreate}\n        />\n        </div>\n        </div>\n        </div>\n    ): null\n    }\n    </div>\n    );\n    }\n}\nexport default Profile;"]},"metadata":{},"sourceType":"module"}