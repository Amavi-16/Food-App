{"ast":null,"code":"import \"antd/es/avatar/style\";\nimport _Avatar from \"antd/es/avatar\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"/home/amavi/projects/demo2/customer-food-app-client/src/user/profile/Profile.js\";\nimport React, { Component } from 'react'; // import PollList from '../../poll/PollList';\n\nimport { getUserProfile } from '../../util/APIUtils';\nimport { getAvatarColor } from '../../util/Colors'; // import { formatDate } from '../../util/Helpers';\n\nimport LoadingIndicator from '../../common/LoadingIndicator';\nimport './Profile.css';\nimport NotFound from '../../common/NotFound';\nimport ServerError from '../../common/ServerError';\nimport { Link } from \"react-router-dom\"; // const TabPane = Tabs.TabPane;\n\nconst Search = _Input.Search;\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      isLoading: false\n    };\n    this.loadUserProfile = this.loadUserProfile.bind(this);\n  }\n\n  loadUserProfile(username) {\n    this.setState({\n      isLoading: true\n    });\n    getUserProfile(username).then(response => {\n      this.setState({\n        user: response,\n        isLoading: false\n      });\n    }).catch(error => {\n      if (error.status === 404) {\n        this.setState({\n          notFound: true,\n          isLoading: false\n        });\n      } else {\n        this.setState({\n          serverError: true,\n          isLoading: false\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    const username = this.props.match.params.username;\n    this.loadUserProfile(username);\n  }\n\n  componentDidUpdate(nextProps) {\n    if (this.props.match.params.username !== nextProps.match.params.username) {\n      this.loadUserProfile(nextProps.match.params.username);\n    }\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return React.createElement(LoadingIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.notFound) {\n      return React.createElement(NotFound, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.serverError) {\n      return React.createElement(ServerError, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n    } // const tabBarStyle = {\n    //     textAlign: 'center'\n    // };\n\n\n    return React.createElement(\"div\", {\n      className: \"profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.user ? React.createElement(\"div\", {\n      className: \"user-profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user-avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(_Avatar, {\n      className: \"user-avatar-circle\",\n      style: {\n        backgroundColor: getAvatarColor(this.state.user.name)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.user.name[0].toUpperCase())), React.createElement(\"div\", {\n      className: \"user-summary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"full-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.user.name), React.createElement(\"div\", {\n      className: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"@\", this.state.user.username), React.createElement(\"div\", {\n      className: \"contactno\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Contact No : \", this.state.user.contactno)), React.createElement(Link, {\n      to: \"/editprofile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Edit\"))) : null);\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/home/amavi/projects/demo2/customer-food-app-client/src/user/profile/Profile.js"],"names":["React","Component","getUserProfile","getAvatarColor","LoadingIndicator","NotFound","ServerError","Link","Search","Profile","constructor","props","state","user","isLoading","loadUserProfile","bind","username","setState","then","response","catch","error","status","notFound","serverError","componentDidMount","match","params","componentDidUpdate","nextProps","render","backgroundColor","name","toUpperCase","contactno"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import PollList from '../../poll/PollList';\nimport { getUserProfile } from '../../util/APIUtils';\nimport { Avatar , Input} from 'antd';\nimport { getAvatarColor } from '../../util/Colors';\n// import { formatDate } from '../../util/Helpers';\nimport LoadingIndicator  from '../../common/LoadingIndicator';\nimport './Profile.css';\nimport NotFound from '../../common/NotFound';\nimport ServerError from '../../common/ServerError';\nimport {Link} from \"react-router-dom\";\n// const TabPane = Tabs.TabPane;\nconst { Search } = Input;\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: null,\n            isLoading: false\n        }\n        this.loadUserProfile = this.loadUserProfile.bind(this);\n    }\n    loadUserProfile(username) {\n        this.setState({\n            isLoading: true\n        });\n        getUserProfile(username)\n            .then(response => {\n                this.setState({\n                    user: response,\n                    isLoading: false\n                });\n            }).catch(error => {\n            if(error.status === 404) {\n                this.setState({\n                    notFound: true,\n                    isLoading: false\n                });\n            } else {\n                this.setState({\n                    serverError: true,\n                    isLoading: false\n                });\n            }\n        });\n    }\n\n    componentDidMount() {\n        const username = this.props.match.params.username;\n        this.loadUserProfile(username);\n    }\n    componentDidUpdate(nextProps) {\n        if(this.props.match.params.username !== nextProps.match.params.username) {\n            this.loadUserProfile(nextProps.match.params.username);\n        }\n    }\n    render() {\n        if(this.state.isLoading) {\n            return <LoadingIndicator />;\n        }\n        if(this.state.notFound) {\n            return <NotFound />;\n        }\n        if(this.state.serverError) {\n            return <ServerError />;\n        }\n        // const tabBarStyle = {\n        //     textAlign: 'center'\n        // };\n        return (\n            <div className=\"profile\">\n        {\n            this.state.user ? (\n            <div className=\"user-profile\">\n            <div className=\"user-details\">\n            <div className=\"user-avatar\">\n            <Avatar className=\"user-avatar-circle\" style={{ backgroundColor: getAvatarColor(this.state.user.name)}}>\n        {this.state.user.name[0].toUpperCase()}\n    </Avatar>\n        </div>\n        <div className=\"user-summary\">\n            <div className=\"full-name\">{this.state.user.name}</div>\n        <div className=\"username\">@{this.state.user.username}</div>\n        <div className=\"contactno\">Contact No : {this.state.user.contactno}</div>\n        </div>\n        <Link to=\"/editprofile\">Edit</Link>\n\n            </div>\n            </div>\n    ): null\n    }\n    </div>\n    );\n    }\n}\nexport default Profile;"]},"metadata":{},"sourceType":"module"}